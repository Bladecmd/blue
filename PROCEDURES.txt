CREATE OR REPLACE FUNCTION GET_MOVIE_RATING (MID IN NUMBER, PID IN VARCHAR2, EML IN VARCHAR2)
RETURN NUMBER IS
	R NUMBER DEFAULT -1;
BEGIN
	SELECT RATING INTO R
	FROM MOVIE_WATCH
	WHERE MOVIE_ID = MID AND PROFILE_ID = PID AND EMAIL = EML;
	
	RETURN R;
END;
/


CREATE OR REPLACE PROCEDURE GET_MOVIE_TIMESTAMP (MID IN NUMBER, PID IN VARCHAR2, EML IN VARCHAR2, WATCHED_UPTO OUT NUMBER) IS
BEGIN
	SELECT MW.WATCHED_UPTO INTO WATCHED_UPTO
	FROM MOVIE_WATCH MW
	WHERE MW.MOVIE_ID = MID AND MW.PROFILE_ID = PID AND MW.EMAIL = EML;
	
	IF WATCHED_UPTO = NULL THEN
		WATCHED_UPTO := 0;
	END IF;
	
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		WATCHED_UPTO := 0;
	
END;
/

CREATE OR REPLACE PROCEDURE GET_EPISODE_TIMESTAMP (SID IN NUMBER, SEASON IN NUMBER,  
EPISODE IN NUMBER, PID IN VARCHAR2, EML IN VARCHAR2, WATCHED_UPTO OUT NUMBER) IS
BEGIN
	SELECT EW.WATCHED_UPTO INTO WATCHED_UPTO
	FROM EPISODE_WATCH EW
	WHERE EW.SHOW_ID = SID AND EW.PROFILE_ID = PID AND EW.EMAIL = EML
	AND SEASON_NO = SEASON AND EPISODE_NO = EPISODE;
	
	IF WATCHED_UPTO = NULL THEN
		WATCHED_UPTO := 0;
	END IF;
	
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		WATCHED_UPTO := 0;
	
END;
/
CREATE 
	OR REPLACE PROCEDURE SET_MOVIE_TIMESTAMP ( MID IN NUMBER, PID IN VARCHAR2, EML IN VARCHAR2, WU IN NUMBER ) IS BEGIN
		INSERT INTO MOVIE_WATCH ( MOVIE_ID, PROFILE_ID, EMAIL, WATCHED_UPTO )
	VALUES
		( MID, PID, EML, WU );
	EXCEPTION 
		WHEN DUP_VAL_ON_INDEX THEN
		UPDATE MOVIE_WATCH 
		SET WATCHED_UPTO = WU,
		TIME = SYSDATE 
	WHERE
		PROFILE_ID = PID 
		AND MOVIE_ID = MID 
		AND EMAIL = EML;
	
END;
/